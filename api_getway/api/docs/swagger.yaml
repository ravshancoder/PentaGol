definitions:
  models.Admin:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.Post:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.PostRequest:
    properties:
      description:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  models.Posts:
    properties:
      users:
        items:
          $ref: '#/definitions/models.Post'
        type: array
    type: object
  models.StandartErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UpdatePostRequest:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
  title: Swagger for admin api
paths:
  /v1/admin/{id}:
    get:
      consumes:
      - application/json
      description: This api gets a user by id
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
      security:
      - ApiKeyAuth: []
      summary: get user by id
      tags:
      - Admin
  /v1/login/{email}/{password}:
    get:
      consumes:
      - application/json
      description: this api login admin
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      - description: password
        in: path
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: login admin api
      tags:
      - Admin
  /v1/post:
    post:
      consumes:
      - application/json
      description: This api creates a post
      parameters:
      - description: Create Post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
      security:
      - ApiKeyAuth: []
      summary: create post
      tags:
      - Post
  /v1/post/{id}:
    delete:
      consumes:
      - application/json
      description: This api deletes a post
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
      security:
      - ApiKeyAuth: []
      summary: delete post
      tags:
      - Post
    get:
      consumes:
      - application/json
      description: This api gets a post by id
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
      security:
      - ApiKeyAuth: []
      summary: get post by id
      tags:
      - Post
  /v1/posts:
    get:
      consumes:
      - application/json
      description: This api gets all posts
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Posts'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
      security:
      - ApiKeyAuth: []
      summary: get all posts
      tags:
      - Post
  /v1/posts/{id}:
    put:
      consumes:
      - application/json
      description: This api updates a post
      parameters:
      - description: Update Post
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartErrorModel'
      security:
      - ApiKeyAuth: []
      summary: update post
      tags:
      - Post
securityDefinitions:
  ApiKeyAuth:
    description: This is a admin service api.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
